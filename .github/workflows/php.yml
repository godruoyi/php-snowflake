name: php
on:
  pull_request:
    branches:
      - master
      - dev
  push:
    branches:
      - master
      - dev
jobs:
  phptests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: ['ubuntu-latest']
        php-versions: ['7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        tools: composer:v2
        coverage: none
        extensions: swoole, redis

    - name: Install dependencies
      uses: nick-invision/retry@v1
      with:
        timeout_minutes: 5
        max_attempts: 5
        command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

    - name: Install Laravel Illuminate Contracts
      run: composer require "illuminate/contracts"

    - name: PHPUnit Test
      run: vendor/bin/phpunit --verbose

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 8.0
        dependencies:
          - highest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          tools: composer:v2, php-cs-fixer
          extensions: swoole, redis

      - name: Coding Guidelines
        run: php-cs-fixer

      - name: Install lowest dependencies with composer
        if: matrix.dependencies == 'lowest'
        run: composer update --no-ansi --no-interaction --no-progress --prefer-lowest

      - name: Install highest dependencies with composer
        if: matrix.dependencies == 'highest'
        run: composer update --no-ansi --no-interaction --no-progress

      - name: Install Laravel Illuminate Contracts
        run: composer require "illuminate/contracts"

      - name: Collect code coverage with phpunit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Send code coverage report to Codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
